apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    deployment.kubernetes.io/revision: "4"
    field.cattle.io/publicEndpoints: '[{"nodeName":"c-hb86f:m-fc09d87d5e86","addresses":["192.168.1.11"],"port":6379,"protocol":"TCP","podName":"xlr:redis-57c468fb74-qxg8n","allNodes":false}]'
  generation: 7
  labels:
    cattle.io/creator: norman
    workload.user.cattle.io/workloadselector: deployment-xlr-redis
  name: redis
  namespace: xlr
spec:
  progressDeadlineSeconds: 600
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    matchLabels:
      workload.user.cattle.io/workloadselector: deployment-xlr-redis
  strategy:
    rollingUpdate:
      maxSurge: 0
      maxUnavailable: 1
    type: RollingUpdate
  template:
    metadata:
      annotations:
        cattle.io/timestamp: "2020-04-11T20:17:57Z"
        field.cattle.io/ports: '[[{"containerPort":6379,"dnsName":"redis-hostport","hostPort":6379,"kind":"HostPort","name":"redis","protocol":"TCP","sourcePort":6379}]]'
      creationTimestamp: null
      labels:
        workload.user.cattle.io/workloadselector: deployment-xlr-redis
    spec:
      containers:
      - envFrom:
        - configMapRef:
            name: slackbotmap
            optional: false
        image: bitnami/redis:latest
        imagePullPolicy: IfNotPresent
        name: redis
        ports:
        - containerPort: 6379
          hostPort: 6379
          name: redis
          protocol: TCP
        resources: {}
        securityContext:
          allowPrivilegeEscalation: false
          capabilities: {}
          privileged: false
          readOnlyRootFilesystem: false
          runAsNonRoot: false
        stdin: true
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        tty: true
        volumeMounts:
        - mountPath: /bitnami/redis/data
          name: vol1
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - hostPath:
          path: {{RedisVol1}}
          type: ""
        name: vol1
